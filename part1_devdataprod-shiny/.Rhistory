set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
lines <- readLines(url, n=10)
url <- "http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
lines <- readLines(url, n=10)
url <- "http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"
lines <- readLines(url, n=10)
w <- c(1, 9, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3, 5, 4, 1, 3)
colNames <- c("filler", "week", "filler", "sstNino12", "filler", "sstaNino12", "filler", "sstNino3", "filler", "sstaNino3", "filler", "sstNino34", "filler", "sstaNino34", "filler", "sstNino4", "filler", "sstaNino4")
d <- read.fwf(url, w, header=FALSE, skip=4, col.names=colNames)
d <- d[, grep("^[^filler]", names(d))]
sum(d[, 4])
{r, eval=FALSE}
library(httr)
require(httpuv)
require(jsonlite)
{r, eval=FALSE}
library(httr)
require(httpuv)
require(jsonlite)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications
#    Insert your values below - if secret is omitted, it will look it up in
#    the GITHUB_CONSUMER_SECRET environmental variable.
#
#    Use http://localhost:1410 as the callback url
myapp <- oauth_app("quiz2", "ddb0d599de51ccd02f4b", secret="6af1109f6ecf442d292425087d49bb13d9bbe9c8")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
query2 <- sqldf("select pwgtp1 from acs")  ## NO
query3 <- sqldf("select * from acs where AGEP < 50 and pwgtp1")  ## NO
query4 <- sqldf("select * from acs where AGEP < 50")  ## NO
identical(query3, query4)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
acs <- data.table(read.csv(f))
query1 <- sqldf("select pwgtp1 from acs where AGEP < 50")
library(httr)
require(httpuv)
require(jsonlite)
library(httr)
require(httpuv)
require(jsonlite)
library(httr)
# 1. Find OAuth settings for github:
#    http://developer.github.com/v3/oauth/
oauth_endpoints("github")
# 2. Register an application at https://github.com/settings/applications;
#    Use any URL you would like for the homepage URL (http://github.com is fine)
#    and http://localhost:1410 as the callback url
#
#    Insert your client ID and secret below - if secret is omitted, it will
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
myapp <- oauth_app("github", "56b637a5baffac62cad9")
# 3. Get OAuth credentials
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
# 4. Use API
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
# OR:
req <- with_config(gtoken, GET("https://api.github.com/rate_limit"))
stop_for_status(req)
content(req)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
f <- file.path(getwd(), "ss06pid.csv")
download.file(url, f)
title: "Markdown"
qnorm(0.50, 45, 3.2)
pnorm(50, mean = 45, sd = 3.2)
pnorm 1- (50, mean = 45, sd = 3.2)
pnorm(50, mean = 45, sd = 3.2) -1
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
install.packages("shiny")
install.packages("shiny")
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
myPlot
myPlot(s)
shiny::runApp('Desktop/courses-master/09_DevelopingDataProducts/shiny/markupApp')
shiny::runApp('Desktop/courses-master/09_DevelopingDataProducts/shiny/testApp')
install.packages("devtools")
install.packages("devtools")
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
install.packages('devtools')
(restart your R session)
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
install.packages(c('ggplot2', 'shiny'))
shiny::runApp('Desktop/courses-master/09_DevelopingDataProducts/shiny/testApp')
shiny::runApp('Desktop/courses-master/09_DevelopingDataProducts/shiny/testApp')
library(shiny)
runApp()
runApp()
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
shiny::runApp('Desktop/DataProducts/part1_devdataprod-shiny')
shiny::runApp('Desktop/DataProducts/part1_devdataprod-shiny')
deployApp()
shiny::runApp('Desktop/DataProducts/part1_devdataprod-shiny')
library("shiny", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("shinyapps", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
devtools::install_github('rstudio/shinyapps')
shiny::runApp('Desktop/DataProducts/part1_devdataprod-shiny')
x
shiny::runApp('Desktop/DataProducts/part1_devdataprod-shiny')
